AdditiveExpression=4
Annotation=5
AnnotationArgument=6
AnnotationMethodDeclaration=7
Annotations=8
AnnotationTypeBody=9
AnnotationTypeDeclaration=10
Arguments=11
ArrayAccess=12
ArrayCreator=13
ArrayInitializer=14
AssignExpr=15
BitAndExpression=16
BitOrExpression=17
BitXorExpression=18
Block=19
CastExpression=20
ClassBody=21
ClassBlock=22
ClassCreator=23
ClassDeclaration=24
ClassOrInterfaceType=25
CompilationUnit=26
ConditionalAndExpression=27
ConditionalExpression=28
ConditionalOrExpression=29
ElementValueArrayInitializer=30
EnhancedForVar=31
EnhancedForExpr=32
EnhancedForStmt=33
EnumBody=34
EnumConstant=35
EnumDeclaration=36
EqualityExpression=37
Expression=38
FieldDeclaration=39
ForInit=40
ForExpr=41
ForUpdate=42
ForStmt=43
FormalParameters=44
IdentifierSuffixClass=45
InnerCreator=46
InterfaceBody=47
InterfaceDeclaration=48
InterfaceFieldDeclaration=49
InterfaceMethodDeclaration=50
Label=51
LocalVariableDeclaration=52
MethodDeclaration=53
Modifiers=54
MultiplicativeExpression=55
ParameterDecl=56
ParExpression=57
PostOperator=58
PrimitiveType=59
PrimitiveTypeClass=60
QualifiedName=61
RelationalExpression=62
Selector=63
ShiftExpression=64
Statement=65
SuperSuffix=66
SwitchEntry=67
Type=68
TypeArguments=69
TypedSuffix=70
TypeList=71
TypeParameters=72
UnaryExpression=73
VariableDeclarator=74
VoidClass=75
IDENTIFIER=76
INTLITERAL=77
LONGLITERAL=78
FLOATLITERAL=79
DOUBLELITERAL=80
CHARLITERAL=81
STRINGLITERAL=82
TRUE=83
FALSE=84
NULL=85
IntegerNumber=86
LongSuffix=87
HexPrefix=88
HexDigit=89
Exponent=90
NonIntegerNumber=91
FloatSuffix=92
DoubleSuffix=93
EscapeSequence=94
WS=95
COMMENT=96
LINE_COMMENT=97
ABSTRACT=98
ASSERT=99
BOOLEAN=100
BREAK=101
BYTE=102
CASE=103
CATCH=104
CHAR=105
CLASS=106
CONST=107
CONTINUE=108
DEFAULT=109
DO=110
DOUBLE=111
ELSE=112
ENUM=113
EXTENDS=114
FINAL=115
FINALLY=116
FLOAT=117
FOR=118
GOTO=119
IF=120
IMPLEMENTS=121
IMPORT=122
INSTANCEOF=123
INT=124
INTERFACE=125
LONG=126
NATIVE=127
NEW=128
PACKAGE=129
PRIVATE=130
PROTECTED=131
PUBLIC=132
RETURN=133
SHORT=134
STATIC=135
STRICTFP=136
SUPER=137
SWITCH=138
SYNCHRONIZED=139
THIS=140
THROW=141
THROWS=142
TRANSIENT=143
TRY=144
VOID=145
VOLATILE=146
WHILE=147
LPAREN=148
RPAREN=149
LBRACE=150
RBRACE=151
LBRACKET=152
RBRACKET=153
SEMI=154
COMMA=155
DOT=156
ELLIPSIS=157
EQ=158
BANG=159
TILDE=160
QUES=161
COLON=162
EQEQ=163
AMPAMP=164
BARBAR=165
PLUSPLUS=166
SUBSUB=167
PLUS=168
SUB=169
STAR=170
SLASH=171
AMP=172
BAR=173
CARET=174
PERCENT=175
PLUSEQ=176
SUBEQ=177
STAREQ=178
SLASHEQ=179
AMPEQ=180
BAREQ=181
CARETEQ=182
PERCENTEQ=183
MONKEYS_AT=184
BANGEQ=185
GT=186
LT=187
IdentifierStart=188
IdentifierPart=189
SurrogateIdentifer=190

strings = {
    'package':129,
    ';':154,
    'import':122,
    'static':135,
    '.':156,
    '*':170,
    'public':132,
    'protected':131,
    'private':130,
    'abstract':98,
    'final':115,
    'native':127,
    'synchronized':139,
    'transient':143,
    'volatile':146,
    'strictfp':136,
    'class':106,
    'extends':114,
    'implements':121,
    '<':187,
    ',':155,
    '>':186,
    '&':172,
    'enum':113,
    '{':150,
    '}':151,
    'interface':125,
    'throws':142,
    'void':145,
    '[':152,
    ']':153,
    '=':158,
    'boolean':100,
    'char':105,
    'byte':102,
    'short':134,
    'int':124,
    'long':126,
    'float':117,
    'double':111,
    '?':161,
    'super':137,
    '(':148,
    ')':149,
    '...':157,
    'this':140,
    '@':184,
    'default':109,
    'assert':99,
    ':':162,
    'if':120,
    'else':112,
    'while':147,
    'do':110,
    'switch':138,
    'return':133,
    'throw':141,
    'break':101,
    'continue':108,
    'case':103,
    'try':144,
    'finally':116,
    'catch':104,
    'for':118,
    '+=':176,
    '-=':177,
    '*=':178,
    '/=':179,
    '&=':180,
    '|=':181,
    '^=':182,
    '%=':183,
    '||':165,
    '&&':164,
    '|':173,
    '^':174,
    '==':163,
    '!=':185,
    'instanceof':123,
    '+':168,
    '-':169,
    '/':171,
    '%':175,
    '++':166,
    '--':167,
    '~':160,
    '!':159,
    'new':128,
}

rev_strings = {}
for k, v in strings.iteritems():
    rev_strings[v] = k
